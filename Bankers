#include <stdio.h>
#include <stdbool.h>
int main()
{
    int n=5;
    int m=3;
    int alloc[5][3] = {
        {0, 1, 0},
        {2, 0, 0},
        {3, 0, 2},
        {2, 1, 1},
        {0, 0, 2}
    };
    int max[5][3]={
        {7, 5, 3},
        {3, 2, 2},
        {9, 0, 2},
        {2, 2, 2},
        {4, 3, 3}
    };
    int avail[3]={3,3,2};
    int need[5][3];
    int safe[5];
    bool finish[5]={false};
    for(int i=0;i<n;i++)
    {
        for(int j=0;j<m;j++)
        {
            need[i][j]=max[i][j]-alloc[i][j];
        }
    }
    int count=0;
    while(count<n)
    {
        bool found=false;
        for(int i=0;i<n;i++)
        {
                if(!finish[i])
                {
                    
                  int j;
                  for(j=0;j<m;j++)
                  {
                      if(need[i][j]>avail[j])
                      break;
                  }
        
                  if(j==m)
                {
                    for(int k=0;k<m;k++)
                    {
                        avail[k]=avail[k]+alloc[i][k];
                    }
                    safe[count++]=i;
                    found=true;
                    finish[i]=true;
                }
            }
        }
        if(!found)
        break;
    }
    if(count==n)
    {
        printf("safe sequence:");
        for(int i=0;i<n;i++)
        {
            printf("%d ",safe[i]);
        }
        printf("\n");
        
    }
    else
    printf("Deadlock possible\n");
    
}